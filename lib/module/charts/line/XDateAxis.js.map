{"version":3,"sources":["XDateAxis.tsx"],"names":["React","Text","View","useLineChart","formatDatetime","XDateAxis","viewStyle","width","flexDirection","justifyContent","textStyle","tickNum","locale","options","data","spacing","Math","floor","length","dates","x","push","value","timestamp","map","date","i"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAA0BC,IAA1B,QAAiD,cAAjD;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,cAAT,QAA+B,aAA/B;AAEA,OAAO,MAAMC,SAAS,GAAG,CAAC;AACxBC,EAAAA,SAAS,GAAG;AACVC,IAAAA,KAAK,EAAE,MADG;AAEVC,IAAAA,aAAa,EAAE,KAFL;AAGVC,IAAAA,cAAc,EAAE;AAHN,GADY;AAMxBC,EAAAA,SANwB;AAOxBC,EAAAA,OAPwB;AAQxBC,EAAAA,MARwB;AASxBC,EAAAA;AATwB,CAAD,KAgBnB;AACJ,QAAM;AAAEC,IAAAA;AAAF,MAAWX,YAAY,EAA7B;AAEA,QAAMY,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAI,CAACI,MAAL,IAAeP,OAAO,GAAG,CAAzB,CAAX,CAAhB;AACA,MAAIQ,KAAK,GAAG,EAAZ;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,OAAO,GAAG,CAA9B,EAAiCS,CAAC,EAAlC,EAAsC;AACpCD,IAAAA,KAAK,CAACE,IAAN,CACEjB,cAAc,CAAC;AACbkB,MAAAA,KAAK,EAAER,IAAI,CAACM,CAAC,GAAGL,OAAL,CAAJ,CAAkBQ,SADZ;AAEbX,MAAAA,MAFa;AAGbC,MAAAA;AAHa,KAAD,CADhB;AAOD;;AACDM,EAAAA,KAAK,CAACE,IAAN,CACEjB,cAAc,CAAC;AACbkB,IAAAA,KAAK,EAAER,IAAI,CAACA,IAAI,CAACI,MAAL,GAAc,CAAf,CAAJ,CAAsBK,SADhB;AAEbX,IAAAA,MAFa;AAGbC,IAAAA;AAHa,GAAD,CADhB;AAQA,sBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEP;AAAb,KACGa,KAAK,CAACK,GAAN,CAAU,CAACC,IAAD,EAAOC,CAAP,KAAa;AACtB,wBACE,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,CAAX;AAAc,MAAA,KAAK,EAAEhB;AAArB,OACGe,IADH,CADF;AAKD,GANA,CADH,CADF;AAWD,CAlDM","sourcesContent":["import React from 'react';\nimport { Text, TextStyle, View, ViewStyle } from 'react-native';\nimport { useLineChart } from './useLineChart';\nimport { formatDatetime } from '../../utils';\n\nexport const XDateAxis = ({\n  viewStyle = {\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  textStyle,\n  tickNum,\n  locale,\n  options,\n}: {\n  viewStyle?: ViewStyle;\n  textStyle: TextStyle;\n  tickNum: number;\n  locale?: string;\n  options?: Intl.DateTimeFormatOptions;\n}) => {\n  const { data } = useLineChart();\n\n  const spacing = Math.floor(data.length / (tickNum - 1));\n  let dates = [];\n\n  for (let x = 0; x < tickNum - 1; x++) {\n    dates.push(\n      formatDatetime({\n        value: data[x * spacing].timestamp,\n        locale,\n        options,\n      })\n    );\n  }\n  dates.push(\n    formatDatetime({\n      value: data[data.length - 1].timestamp,\n      locale,\n      options,\n    })\n  );\n\n  return (\n    <View style={viewStyle}>\n      {dates.map((date, i) => {\n        return (\n          <Text key={i} style={textStyle}>\n            {date}\n          </Text>\n        );\n      })}\n    </View>\n  );\n};\n"]}