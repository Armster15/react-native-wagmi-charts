{"version":3,"sources":["VerticalLine.tsx"],"names":["React","Line","SVGLine","LineChartDimensionsContext","useLineChart","Animated","useAnimatedProps","LineChartVerticalLine","displayName","AnimatedLine","createAnimatedComponent","color","lineProps","at","width","height","useContext","data","lineX","useMemo","length","lineAnimatedProps","x1","x2","y1","y2"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAI,IAAIC,OAAjB,QAA2C,kBAA3C;AACA,SAASC,0BAAT,QAA2C,SAA3C;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,OAAOC,QAAP,IAAmBC,gBAAnB,QAA2C,yBAA3C;AAQAC,qBAAqB,CAACC,WAAtB,GAAoC,uBAApC;AAEA,MAAMC,YAAY,GAAGJ,QAAQ,CAACK,uBAAT,CAAiCR,OAAjC,CAArB;AAEA,OAAO,SAASK,qBAAT,CAA+B;AACpCI,EAAAA,KAAK,GAAG,MAD4B;AAEpCC,EAAAA,SAFoC;AAGpCC,EAAAA;AAHoC,CAA/B,EAIe;AACpB,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAoBf,KAAK,CAACgB,UAAN,CAAiBb,0BAAjB,CAA1B;AACA,QAAM;AAAEc,IAAAA;AAAF,MAAWb,YAAY,EAA7B;AAEA,QAAMc,KAAK,GAAGlB,KAAK,CAACmB,OAAN,CACZ,MAAOL,KAAK,GAAGG,IAAI,CAACG,MAAd,GAAwBP,EADlB,EAEZ,CAACI,IAAI,CAACG,MAAN,EAAcN,KAAd,EAAqBD,EAArB,CAFY,CAAd;AAKA,QAAMQ,iBAAiB,GAAGf,gBAAgB,CAAC,OAAO;AAChDgB,IAAAA,EAAE,EAAEJ,KAD4C;AAEhDK,IAAAA,EAAE,EAAEL,KAF4C;AAGhDM,IAAAA,EAAE,EAAE,CAH4C;AAIhDC,IAAAA,EAAE,EAAEV;AAJ4C,GAAP,CAAD,CAA1C;AAOA,sBACE,oBAAC,YAAD;AACE,IAAA,aAAa,EAAEM,iBADjB;AAEE,IAAA,MAAM,EAAEV;AAFV,KAGMC,SAHN,EADF;AAOD","sourcesContent":["import React from 'react';\nimport { Line as SVGLine, LineProps } from 'react-native-svg';\nimport { LineChartDimensionsContext } from './Chart';\nimport { useLineChart } from './useLineChart';\nimport Animated, { useAnimatedProps } from 'react-native-reanimated';\n\ntype VerticalLineProps = {\n  color?: string;\n  lineProps?: Partial<LineProps>;\n  at: number;\n};\n\nLineChartVerticalLine.displayName = 'LineChartVerticalLine';\n\nconst AnimatedLine = Animated.createAnimatedComponent(SVGLine);\n\nexport function LineChartVerticalLine({\n  color = 'gray',\n  lineProps,\n  at,\n}: VerticalLineProps) {\n  const { width, height } = React.useContext(LineChartDimensionsContext);\n  const { data } = useLineChart();\n\n  const lineX = React.useMemo(\n    () => (width / data.length) * at,\n    [data.length, width, at]\n  );\n\n  const lineAnimatedProps = useAnimatedProps(() => ({\n    x1: lineX,\n    x2: lineX,\n    y1: 0,\n    y2: height,\n  }));\n\n  return (\n    <AnimatedLine\n      animatedProps={lineAnimatedProps}\n      stroke={color}\n      {...lineProps}\n    />\n  );\n}\n"]}